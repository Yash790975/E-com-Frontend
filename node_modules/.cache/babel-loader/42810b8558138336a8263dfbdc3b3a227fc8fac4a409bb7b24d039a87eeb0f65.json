{"ast":null,"code":"var _jsxFileName = \"Y:\\\\MY\\\\Certificate\\\\E-COM\\\\E_Commerce\\\\src\\\\components\\\\PrivateRoute.jsx\",\n  _s = $RefreshSig$();\n// // components/PrivateRoute.jsx - Create a component for protected routes\n\n// import React from 'react';\n// import { Navigate, Outlet } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n\n// const PrivateRoute = () => {\n//   const { isAuthenticated, loading } = useSelector(state => state.auth);\n\n//   // If auth is being loaded, you might want to show a loading spinner\n//   if (loading) {\n//     return <div className=\"container text-center py-5\">Loading...</div>;\n//   }\n\n//   // If not authenticated, redirect to login\n//   return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" />;\n// };\n\n// export default PrivateRoute;\n\n// src/components/PrivateRoute.js\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = () => {\n  _s();\n  const {\n    isAuthenticated\n  } = useSelector(state => state.auth);\n  const location = useLocation();\n\n  // Store the current location before redirecting to login\n  if (!isAuthenticated) {\n    // Save the current path to redirect back after login\n    sessionStorage.setItem('redirectAfterLogin', location.pathname);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If authenticated, render the protected routes\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n_s(PrivateRoute, \"/CCi3NdmaydxYTvdtaBDesAg8gU=\", false, function () {\n  return [useSelector, useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Navigate","Outlet","useLocation","useSelector","jsxDEV","_jsxDEV","PrivateRoute","_s","isAuthenticated","state","auth","location","sessionStorage","setItem","pathname","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["Y:/MY/Certificate/E-COM/E_Commerce/src/components/PrivateRoute.jsx"],"sourcesContent":["// // components/PrivateRoute.jsx - Create a component for protected routes\r\n\r\n// import React from 'react';\r\n// import { Navigate, Outlet } from 'react-router-dom';\r\n// import { useSelector } from 'react-redux';\r\n\r\n// const PrivateRoute = () => {\r\n//   const { isAuthenticated, loading } = useSelector(state => state.auth);\r\n  \r\n//   // If auth is being loaded, you might want to show a loading spinner\r\n//   if (loading) {\r\n//     return <div className=\"container text-center py-5\">Loading...</div>;\r\n//   }\r\n  \r\n//   // If not authenticated, redirect to login\r\n//   return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" />;\r\n// };\r\n\r\n// export default PrivateRoute;\r\n\r\n// src/components/PrivateRoute.js\r\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PrivateRoute = () => {\r\n  const { isAuthenticated } = useSelector(state => state.auth);\r\n  const location = useLocation();\r\n  \r\n  // Store the current location before redirecting to login\r\n  if (!isAuthenticated) {\r\n    // Save the current path to redirect back after login\r\n    sessionStorage.setItem('redirectAfterLogin', location.pathname);\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  // If authenticated, render the protected routes\r\n  return <Outlet />;\r\n};\r\n\r\nexport default PrivateRoute;"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAgB,CAAC,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAC5D,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAI,CAACM,eAAe,EAAE;IACpB;IACAI,cAAc,CAACC,OAAO,CAAC,oBAAoB,EAAEF,QAAQ,CAACG,QAAQ,CAAC;IAC/D,oBAAOT,OAAA,CAACL,QAAQ;MAACe,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,oBAAOd,OAAA,CAACJ,MAAM;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACZ,EAAA,CAbID,YAAY;EAAA,QACYH,WAAW,EACtBD,WAAW;AAAA;AAAAkB,EAAA,GAFxBd,YAAY;AAelB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}