{"ast":null,"code":"// // redux/reducer/authReducer.js\n// import {\n//   LOGIN_REQUEST,\n//   LOGIN_SUCCESS,\n//   LOGIN_FAIL,\n//   REGISTER_REQUEST,\n//   REGISTER_SUCCESS,\n//   REGISTER_FAIL,\n//   LOGOUT,\n//   USER_LOADED,\n//   AUTH_ERROR\n// } from '../action/authActions';\n\n// // Get user from localStorage\n// const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n// const token = localStorage.getItem('token');\n\n// const initialState = {\n//   token: token || null,\n//   isAuthenticated: !!token,\n//   user: user || null,\n//   loading: false,\n//   error: null\n// };\n\n// const authReducer = (state = initialState, action) => {\n//   const { type, payload } = action;\n\n//   switch (type) {\n//     case LOGIN_REQUEST:\n//     case REGISTER_REQUEST:\n//       return {\n//         ...state,\n//         loading: true,\n//         error: null\n//       };\n//     case USER_LOADED:\n//       return {\n//         ...state,\n//         isAuthenticated: true,\n//         loading: false,\n//         user: payload\n//       };\n//     case LOGIN_SUCCESS:\n//     case REGISTER_SUCCESS:\n//       return {\n//         ...state,\n//         token: payload.token,\n//         isAuthenticated: true,\n//         loading: false,\n//         user: payload.user,\n//         error: null\n//       };\n//     case AUTH_ERROR:\n//     case LOGIN_FAIL:\n//     case REGISTER_FAIL:\n//     case LOGOUT:\n//       return {\n//         ...state,\n//         token: null,\n//         isAuthenticated: false,\n//         loading: false,\n//         user: null,\n//         error: payload\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// export default authReducer;\n\nimport { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, AUTH_ERROR, USER_LOADED } from '../action/authActions';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  // isAuthenticated: null,\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n  error: null\n};\nconst authReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case AUTH_ERROR:\n    case LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: payload\n      };\n    default:\n      return state;\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","AUTH_ERROR","USER_LOADED","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","authReducer","state","action","type","payload","setItem","removeItem"],"sources":["Y:/MY/Certificate/E-COM/E_Commerce/src/redux/reducer/authReducer.js"],"sourcesContent":["// // redux/reducer/authReducer.js\r\n// import {\r\n//   LOGIN_REQUEST,\r\n//   LOGIN_SUCCESS,\r\n//   LOGIN_FAIL,\r\n//   REGISTER_REQUEST,\r\n//   REGISTER_SUCCESS,\r\n//   REGISTER_FAIL,\r\n//   LOGOUT,\r\n//   USER_LOADED,\r\n//   AUTH_ERROR\r\n// } from '../action/authActions';\r\n\r\n// // Get user from localStorage\r\n// const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\r\n// const token = localStorage.getItem('token');\r\n\r\n// const initialState = {\r\n//   token: token || null,\r\n//   isAuthenticated: !!token,\r\n//   user: user || null,\r\n//   loading: false,\r\n//   error: null\r\n// };\r\n\r\n// const authReducer = (state = initialState, action) => {\r\n//   const { type, payload } = action;\r\n  \r\n//   switch (type) {\r\n//     case LOGIN_REQUEST:\r\n//     case REGISTER_REQUEST:\r\n//       return {\r\n//         ...state,\r\n//         loading: true,\r\n//         error: null\r\n//       };\r\n//     case USER_LOADED:\r\n//       return {\r\n//         ...state,\r\n//         isAuthenticated: true,\r\n//         loading: false,\r\n//         user: payload\r\n//       };\r\n//     case LOGIN_SUCCESS:\r\n//     case REGISTER_SUCCESS:\r\n//       return {\r\n//         ...state,\r\n//         token: payload.token,\r\n//         isAuthenticated: true,\r\n//         loading: false,\r\n//         user: payload.user,\r\n//         error: null\r\n//       };\r\n//     case AUTH_ERROR:\r\n//     case LOGIN_FAIL:\r\n//     case REGISTER_FAIL:\r\n//     case LOGOUT:\r\n//       return {\r\n//         ...state,\r\n//         token: null,\r\n//         isAuthenticated: false,\r\n//         loading: false,\r\n//         user: null,\r\n//         error: payload\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default authReducer;\r\n\r\n\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  AUTH_ERROR,\r\n  USER_LOADED\r\n} from '../action/authActions';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  // isAuthenticated: null,\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n  error: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REGISTER_FAIL:\r\n    case LOGIN_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        error: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,SACEA,gBAAgB,EAChBC,aAAa,EACbC,aAAa,EACbC,UAAU,EACVC,MAAM,EACNC,UAAU,EACVC,WAAW,QACN,uBAAuB;AAE9B,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACpC;EACAC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE,IAAI;EACbC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGT,YAAY,EAAEU,MAAM,KAAK;EACpD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAQC,IAAI;IACV,KAAKZ,WAAW;MACd,OAAO;QACL,GAAGU,KAAK;QACRL,eAAe,EAAE,IAAI;QACrBC,OAAO,EAAE,KAAK;QACdC,IAAI,EAAEM;MACR,CAAC;IACH,KAAKnB,gBAAgB;IACrB,KAAKE,aAAa;MAChBO,YAAY,CAACW,OAAO,CAAC,OAAO,EAAED,OAAO,CAACX,KAAK,CAAC;MAC5C,OAAO;QACL,GAAGQ,KAAK;QACR,GAAGG,OAAO;QACVR,eAAe,EAAE,IAAI;QACrBC,OAAO,EAAE,KAAK;QACdE,KAAK,EAAE;MACT,CAAC;IACH,KAAKb,aAAa;IAClB,KAAKE,UAAU;IACf,KAAKE,UAAU;IACf,KAAKD,MAAM;MACTK,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;MAChC,OAAO;QACL,GAAGL,KAAK;QACRR,KAAK,EAAE,IAAI;QACXG,eAAe,EAAE,KAAK;QACtBC,OAAO,EAAE,KAAK;QACdC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAEK;MACT,CAAC;IACH;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}