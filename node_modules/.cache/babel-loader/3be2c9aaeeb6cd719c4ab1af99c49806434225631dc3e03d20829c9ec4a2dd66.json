{"ast":null,"code":"var _jsxFileName = \"Y:\\\\MY\\\\Certificate\\\\E-COM\\\\E_Commerce\\\\src\\\\components\\\\PrivateRoute.jsx\",\n  _s = $RefreshSig$();\n// // components/PrivateRoute.jsx - Create a component for protected routes\n\n// import React from 'react';\n// import { Navigate, Outlet } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n\n// const PrivateRoute = () => {\n//   const { isAuthenticated, loading } = useSelector(state => state.auth);\n\n//   // If auth is being loaded, you might want to show a loading spinner\n//   if (loading) {\n//     return <div className=\"container text-center py-5\">Loading...</div>;\n//   }\n\n//   // If not authenticated, redirect to login\n//   return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" />;\n// };\n\n// export default PrivateRoute;\n\n// ===================================2nd===================================\n\n// // src/components/PrivateRoute.js\n// import { Navigate, Outlet, useLocation } from \"react-router-dom\";\n// import { useSelector } from \"react-redux\";\n\n// const PrivateRoute = () => {\n//   const { isAuthenticated } = useSelector(state => state.auth);\n//   const location = useLocation();\n\n//   // Store the current location before redirecting to login\n//   if (!isAuthenticated) {\n//     // Save the current path to redirect back after login\n//     sessionStorage.setItem('redirectAfterLogin', location.pathname);\n//     return <Navigate to=\"/login\" />;\n//   }\n\n//   // If authenticated, render the protected routes\n//   return <Outlet />;\n// };\n\n// export default PrivateRoute;\n\n// ==============================3rd=======================================================\n\n// // src/components/PrivateRoute.js\n// import { Navigate, Outlet, useLocation } from \"react-router-dom\";\n// import React from \"react\";\n\n// const PrivateRoute = () => {\n//   const location = useLocation();\n//   const token = localStorage.getItem(\"token\");\n\n//   if (!token) {\n//     // Save the current path to redirect back after login\n//     sessionStorage.setItem('redirectAfterLogin', location.pathname);\n//     return <Navigate to=\"/login\" />;\n//   }\n\n//   // If authenticated, render the protected routes\n//   return <Outlet />;\n// };\n\n// export default PrivateRoute;\n\n// ========================================4th======================================\n\n// src/components/PrivateRoute.js\nimport { useSelector } from 'react-redux';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = () => {\n  _s();\n  const {\n    isAuthenticated,\n    loading\n  } = useSelector(state => state.auth);\n  if (loading) return null; // Optional: replace with spinner\n\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 41\n  }, this);\n};\n_s(PrivateRoute, \"mAENYpc+W6aezy85cSm6x7l9k/M=\", false, function () {\n  return [useSelector];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["useSelector","Navigate","Outlet","jsxDEV","_jsxDEV","PrivateRoute","_s","isAuthenticated","loading","state","auth","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["Y:/MY/Certificate/E-COM/E_Commerce/src/components/PrivateRoute.jsx"],"sourcesContent":["// // components/PrivateRoute.jsx - Create a component for protected routes\r\n\r\n// import React from 'react';\r\n// import { Navigate, Outlet } from 'react-router-dom';\r\n// import { useSelector } from 'react-redux';\r\n\r\n// const PrivateRoute = () => {\r\n//   const { isAuthenticated, loading } = useSelector(state => state.auth);\r\n  \r\n//   // If auth is being loaded, you might want to show a loading spinner\r\n//   if (loading) {\r\n//     return <div className=\"container text-center py-5\">Loading...</div>;\r\n//   }\r\n  \r\n//   // If not authenticated, redirect to login\r\n//   return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" />;\r\n// };\r\n\r\n// export default PrivateRoute;\r\n\r\n\r\n// ===================================2nd===================================\r\n\r\n\r\n\r\n// // src/components/PrivateRoute.js\r\n// import { Navigate, Outlet, useLocation } from \"react-router-dom\";\r\n// import { useSelector } from \"react-redux\";\r\n\r\n// const PrivateRoute = () => {\r\n//   const { isAuthenticated } = useSelector(state => state.auth);\r\n//   const location = useLocation();\r\n  \r\n//   // Store the current location before redirecting to login\r\n//   if (!isAuthenticated) {\r\n//     // Save the current path to redirect back after login\r\n//     sessionStorage.setItem('redirectAfterLogin', location.pathname);\r\n//     return <Navigate to=\"/login\" />;\r\n//   }\r\n\r\n//   // If authenticated, render the protected routes\r\n//   return <Outlet />;\r\n// };\r\n\r\n// export default PrivateRoute;\r\n\r\n\r\n// ==============================3rd=======================================================\r\n\r\n\r\n// // src/components/PrivateRoute.js\r\n// import { Navigate, Outlet, useLocation } from \"react-router-dom\";\r\n// import React from \"react\";\r\n\r\n// const PrivateRoute = () => {\r\n//   const location = useLocation();\r\n//   const token = localStorage.getItem(\"token\");\r\n  \r\n//   if (!token) {\r\n//     // Save the current path to redirect back after login\r\n//     sessionStorage.setItem('redirectAfterLogin', location.pathname);\r\n//     return <Navigate to=\"/login\" />;\r\n//   }\r\n\r\n//   // If authenticated, render the protected routes\r\n//   return <Outlet />;\r\n// };\r\n\r\n// export default PrivateRoute;\r\n\r\n\r\n// ========================================4th======================================\r\n\r\n\r\n// src/components/PrivateRoute.js\r\nimport { useSelector } from 'react-redux';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\n\r\nconst PrivateRoute = () => {\r\n  const { isAuthenticated, loading } = useSelector((state) => state.auth);\r\n\r\n  if (loading) return null; // Optional: replace with spinner\r\n\r\n  return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;;AAGA;AACA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,eAAe;IAAEC;EAAQ,CAAC,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAEvE,IAAIF,OAAO,EAAE,OAAO,IAAI,CAAC,CAAC;;EAE1B,OAAOD,eAAe,gBAAGH,OAAA,CAACF,MAAM;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGV,OAAA,CAACH,QAAQ;IAACc,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChE,CAAC;AAACR,EAAA,CANID,YAAY;EAAA,QACqBL,WAAW;AAAA;AAAAgB,EAAA,GAD5CX,YAAY;AAQlB,eAAeA,YAAY;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}