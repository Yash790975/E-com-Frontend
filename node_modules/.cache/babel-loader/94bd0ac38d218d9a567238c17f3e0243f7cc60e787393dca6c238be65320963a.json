{"ast":null,"code":"// // redux/action/authActions.js\n// import axios from 'axios';\n\n// // Action Types\n// export const LOGIN_REQUEST = 'LOGIN_REQUEST';\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\n// export const REGISTER_REQUEST = 'REGISTER_REQUEST';\n// export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\n// export const REGISTER_FAIL = 'REGISTER_FAIL';\n// export const LOGOUT = 'LOGOUT';\n// export const USER_LOADED = 'USER_LOADED';\n// export const AUTH_ERROR = 'AUTH_ERROR';\n\n// const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // Load User\n// export const loadUser = () => async (dispatch) => {\n//   const token = localStorage.getItem('token');\n\n//   if (!token) {\n//     dispatch({ type: AUTH_ERROR });\n//     return;\n//   }\n\n//   try {\n//     const config = {\n//       headers: {\n//         'x-auth-token': token\n//       }\n//     };\n\n//     const res = await axios.get(`${apiUrl}/api/user`, config);\n\n//     dispatch({\n//       type: USER_LOADED,\n//       payload: res.data\n//     });\n//   } catch (err) {\n//     dispatch({ type: AUTH_ERROR });\n//   }\n// };\n\n// // Login User\n// export const login = (email, password) => async (dispatch) => {\n//   dispatch({ type: LOGIN_REQUEST });\n\n//   try {\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json'\n//       }\n//     };\n\n//     const body = JSON.stringify({ email, password });\n\n//     const res = await axios.post(`${apiUrl}/api/login`, body, config);\n\n//     dispatch({\n//       type: LOGIN_SUCCESS,\n//       payload: res.data\n//     });\n\n//     // Save to localStorage\n//     localStorage.setItem('token', res.data.token);\n//     localStorage.setItem('user', JSON.stringify(res.data.user));\n\n//     dispatch(loadUser());\n\n//     return { success: true };\n//   } catch (err) {\n//     const errors = err.response?.data?.message || 'Login failed';\n\n//     dispatch({\n//       type: LOGIN_FAIL,\n//       payload: errors\n//     });\n\n//     return { success: false, error: errors };\n//   }\n// };\n\n// // Register User\n// export const register = ({ name, email, password }) => async (dispatch) => {\n//   dispatch({ type: REGISTER_REQUEST });\n\n//   try {\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json'\n//       }\n//     };\n\n//     const body = JSON.stringify({ name, email, password });\n\n//     const res = await axios.post(`${apiUrl}/api/register`, body, config);\n\n//     dispatch({\n//       type: REGISTER_SUCCESS,\n//       payload: res.data\n//     });\n\n//     // Save to localStorage\n//     localStorage.setItem('token', res.data.token);\n//     localStorage.setItem('user', JSON.stringify(res.data.user));\n\n//     dispatch(loadUser());\n\n//     return { success: true };\n//   } catch (err) {\n//     const errors = err.response?.data?.message || 'Registration failed';\n\n//     dispatch({\n//       type: REGISTER_FAIL,\n//       payload: errors\n//     });\n\n//     return { success: false, error: errors };\n//   }\n// };\n\n// // Logout\n// export const logout = () => (dispatch) => {\n//   localStorage.removeItem('token');\n//   localStorage.removeItem('user');\n\n//   dispatch({ type: LOGOUT });\n// };","map":{"version":3,"names":[],"sources":["Y:/MY/Certificate/E-COM/E_Commerce/src/redux/action/authActions.js"],"sourcesContent":["// // redux/action/authActions.js\r\n// import axios from 'axios';\r\n\r\n// // Action Types\r\n// export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\r\n// export const REGISTER_REQUEST = 'REGISTER_REQUEST';\r\n// export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\n// export const REGISTER_FAIL = 'REGISTER_FAIL';\r\n// export const LOGOUT = 'LOGOUT';\r\n// export const USER_LOADED = 'USER_LOADED';\r\n// export const AUTH_ERROR = 'AUTH_ERROR';\r\n\r\n// const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n// // Load User\r\n// export const loadUser = () => async (dispatch) => {\r\n//   const token = localStorage.getItem('token');\r\n  \r\n//   if (!token) {\r\n//     dispatch({ type: AUTH_ERROR });\r\n//     return;\r\n//   }\r\n  \r\n//   try {\r\n//     const config = {\r\n//       headers: {\r\n//         'x-auth-token': token\r\n//       }\r\n//     };\r\n    \r\n//     const res = await axios.get(`${apiUrl}/api/user`, config);\r\n    \r\n//     dispatch({\r\n//       type: USER_LOADED,\r\n//       payload: res.data\r\n//     });\r\n//   } catch (err) {\r\n//     dispatch({ type: AUTH_ERROR });\r\n//   }\r\n// };\r\n\r\n// // Login User\r\n// export const login = (email, password) => async (dispatch) => {\r\n//   dispatch({ type: LOGIN_REQUEST });\r\n  \r\n//   try {\r\n//     const config = {\r\n//       headers: {\r\n//         'Content-Type': 'application/json'\r\n//       }\r\n//     };\r\n    \r\n//     const body = JSON.stringify({ email, password });\r\n    \r\n//     const res = await axios.post(`${apiUrl}/api/login`, body, config);\r\n    \r\n//     dispatch({\r\n//       type: LOGIN_SUCCESS,\r\n//       payload: res.data\r\n//     });\r\n    \r\n//     // Save to localStorage\r\n//     localStorage.setItem('token', res.data.token);\r\n//     localStorage.setItem('user', JSON.stringify(res.data.user));\r\n    \r\n//     dispatch(loadUser());\r\n    \r\n//     return { success: true };\r\n//   } catch (err) {\r\n//     const errors = err.response?.data?.message || 'Login failed';\r\n    \r\n//     dispatch({\r\n//       type: LOGIN_FAIL,\r\n//       payload: errors\r\n//     });\r\n    \r\n//     return { success: false, error: errors };\r\n//   }\r\n// };\r\n\r\n// // Register User\r\n// export const register = ({ name, email, password }) => async (dispatch) => {\r\n//   dispatch({ type: REGISTER_REQUEST });\r\n  \r\n//   try {\r\n//     const config = {\r\n//       headers: {\r\n//         'Content-Type': 'application/json'\r\n//       }\r\n//     };\r\n    \r\n//     const body = JSON.stringify({ name, email, password });\r\n    \r\n//     const res = await axios.post(`${apiUrl}/api/register`, body, config);\r\n    \r\n//     dispatch({\r\n//       type: REGISTER_SUCCESS,\r\n//       payload: res.data\r\n//     });\r\n    \r\n//     // Save to localStorage\r\n//     localStorage.setItem('token', res.data.token);\r\n//     localStorage.setItem('user', JSON.stringify(res.data.user));\r\n    \r\n//     dispatch(loadUser());\r\n    \r\n//     return { success: true };\r\n//   } catch (err) {\r\n//     const errors = err.response?.data?.message || 'Registration failed';\r\n    \r\n//     dispatch({\r\n//       type: REGISTER_FAIL,\r\n//       payload: errors\r\n//     });\r\n    \r\n//     return { success: false, error: errors };\r\n//   }\r\n// };\r\n\r\n// // Logout\r\n// export const logout = () => (dispatch) => {\r\n//   localStorage.removeItem('token');\r\n//   localStorage.removeItem('user');\r\n  \r\n//   dispatch({ type: LOGOUT });\r\n// };"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}