{"ast":null,"code":"// redux/action/authActions.js\nimport axios from 'axios';\n\n// Action Types\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nconst apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n    return;\n  }\n  try {\n    const config = {\n      headers: {\n        'x-auth-token': token\n      }\n    };\n    const res = await axios.get(`${apiUrl}/api/user`, config);\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n  dispatch({\n    type: LOGIN_REQUEST\n  });\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      email,\n      password\n    });\n    const res = await axios.post(`${apiUrl}/api/login`, body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    // Save to localStorage\n    localStorage.setItem('token', res.data.token);\n    localStorage.setItem('user', JSON.stringify(res.data.user));\n    dispatch(loadUser());\n    return {\n      success: true\n    };\n  } catch (err) {\n    var _err$response, _err$response$data;\n    const errors = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Login failed';\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: errors\n    });\n    return {\n      success: false,\n      error: errors\n    };\n  }\n};\n\n// Register User\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  dispatch({\n    type: REGISTER_REQUEST\n  });\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password\n    });\n    const res = await axios.post(`${apiUrl}/api/register`, body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n\n    // Save to localStorage\n    localStorage.setItem('token', res.data.token);\n    localStorage.setItem('user', JSON.stringify(res.data.user));\n    dispatch(loadUser());\n    return {\n      success: true\n    };\n  } catch (err) {\n    var _err$response2, _err$response2$data;\n    const errors = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Registration failed';\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: errors\n    });\n    return {\n      success: false,\n      error: errors\n    };\n  }\n};\n\n// Logout\nexport const logout = () => dispatch => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAIL","LOGOUT","USER_LOADED","AUTH_ERROR","apiUrl","process","env","REACT_APP_API_URL","loadUser","dispatch","token","localStorage","getItem","type","config","headers","res","get","payload","data","err","login","email","password","body","JSON","stringify","post","setItem","user","success","_err$response","_err$response$data","errors","response","message","error","register","name","_err$response2","_err$response2$data","logout","removeItem"],"sources":["Y:/MY/Certificate/E-COM/E_Commerce/src/redux/action/authActions.js"],"sourcesContent":["// redux/action/authActions.js\r\nimport axios from 'axios';\r\n\r\n// Action Types\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  const token = localStorage.getItem('token');\r\n  \r\n  if (!token) {\r\n    dispatch({ type: AUTH_ERROR });\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'x-auth-token': token\r\n      }\r\n    };\r\n    \r\n    const res = await axios.get(`${apiUrl}/api/user`, config);\r\n    \r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  dispatch({ type: LOGIN_REQUEST });\r\n  \r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    \r\n    const body = JSON.stringify({ email, password });\r\n    \r\n    const res = await axios.post(`${apiUrl}/api/login`, body, config);\r\n    \r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    \r\n    // Save to localStorage\r\n    localStorage.setItem('token', res.data.token);\r\n    localStorage.setItem('user', JSON.stringify(res.data.user));\r\n    \r\n    dispatch(loadUser());\r\n    \r\n    return { success: true };\r\n  } catch (err) {\r\n    const errors = err.response?.data?.message || 'Login failed';\r\n    \r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: errors\r\n    });\r\n    \r\n    return { success: false, error: errors };\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  dispatch({ type: REGISTER_REQUEST });\r\n  \r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    \r\n    const body = JSON.stringify({ name, email, password });\r\n    \r\n    const res = await axios.post(`${apiUrl}/api/register`, body, config);\r\n    \r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    \r\n    // Save to localStorage\r\n    localStorage.setItem('token', res.data.token);\r\n    localStorage.setItem('user', JSON.stringify(res.data.user));\r\n    \r\n    dispatch(loadUser());\r\n    \r\n    return { success: true };\r\n  } catch (err) {\r\n    const errors = err.response?.data?.message || 'Registration failed';\r\n    \r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n      payload: errors\r\n    });\r\n    \r\n    return { success: false, error: errors };\r\n  }\r\n};\r\n\r\n// Logout\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('user');\r\n  \r\n  dispatch({ type: LOGOUT });\r\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,MAAM,GAAG,QAAQ;AAC9B,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,UAAU,GAAG,YAAY;AAEtC,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAEvE;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAChD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI,CAACF,KAAK,EAAE;IACVD,QAAQ,CAAC;MAAEI,IAAI,EAAEV;IAAW,CAAC,CAAC;IAC9B;EACF;EAEA,IAAI;IACF,MAAMW,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAEL;MAClB;IACF,CAAC;IAED,MAAMM,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,GAAGb,MAAM,WAAW,EAAEU,MAAM,CAAC;IAEzDL,QAAQ,CAAC;MACPI,IAAI,EAAEX,WAAW;MACjBgB,OAAO,EAAEF,GAAG,CAACG;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZX,QAAQ,CAAC;MAAEI,IAAI,EAAEV;IAAW,CAAC,CAAC;EAChC;AACF,CAAC;;AAED;AACA,OAAO,MAAMkB,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOd,QAAQ,IAAK;EAC5DA,QAAQ,CAAC;IAAEI,IAAI,EAAElB;EAAc,CAAC,CAAC;EAEjC,IAAI;IACF,MAAMmB,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAMS,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;MAAEJ,KAAK;MAAEC;IAAS,CAAC,CAAC;IAEhD,MAAMP,GAAG,GAAG,MAAMtB,KAAK,CAACiC,IAAI,CAAC,GAAGvB,MAAM,YAAY,EAAEoB,IAAI,EAAEV,MAAM,CAAC;IAEjEL,QAAQ,CAAC;MACPI,IAAI,EAAEjB,aAAa;MACnBsB,OAAO,EAAEF,GAAG,CAACG;IACf,CAAC,CAAC;;IAEF;IACAR,YAAY,CAACiB,OAAO,CAAC,OAAO,EAAEZ,GAAG,CAACG,IAAI,CAACT,KAAK,CAAC;IAC7CC,YAAY,CAACiB,OAAO,CAAC,MAAM,EAAEH,IAAI,CAACC,SAAS,CAACV,GAAG,CAACG,IAAI,CAACU,IAAI,CAAC,CAAC;IAE3DpB,QAAQ,CAACD,QAAQ,CAAC,CAAC,CAAC;IAEpB,OAAO;MAAEsB,OAAO,EAAE;IAAK,CAAC;EAC1B,CAAC,CAAC,OAAOV,GAAG,EAAE;IAAA,IAAAW,aAAA,EAAAC,kBAAA;IACZ,MAAMC,MAAM,GAAG,EAAAF,aAAA,GAAAX,GAAG,CAACc,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcZ,IAAI,cAAAa,kBAAA,uBAAlBA,kBAAA,CAAoBG,OAAO,KAAI,cAAc;IAE5D1B,QAAQ,CAAC;MACPI,IAAI,EAAEhB,UAAU;MAChBqB,OAAO,EAAEe;IACX,CAAC,CAAC;IAEF,OAAO;MAAEH,OAAO,EAAE,KAAK;MAAEM,KAAK,EAAEH;IAAO,CAAC;EAC1C;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEhB,KAAK;EAAEC;AAAS,CAAC,KAAK,MAAOd,QAAQ,IAAK;EACzEA,QAAQ,CAAC;IAAEI,IAAI,EAAEf;EAAiB,CAAC,CAAC;EAEpC,IAAI;IACF,MAAMgB,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAMS,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;MAAEY,IAAI;MAAEhB,KAAK;MAAEC;IAAS,CAAC,CAAC;IAEtD,MAAMP,GAAG,GAAG,MAAMtB,KAAK,CAACiC,IAAI,CAAC,GAAGvB,MAAM,eAAe,EAAEoB,IAAI,EAAEV,MAAM,CAAC;IAEpEL,QAAQ,CAAC;MACPI,IAAI,EAAEd,gBAAgB;MACtBmB,OAAO,EAAEF,GAAG,CAACG;IACf,CAAC,CAAC;;IAEF;IACAR,YAAY,CAACiB,OAAO,CAAC,OAAO,EAAEZ,GAAG,CAACG,IAAI,CAACT,KAAK,CAAC;IAC7CC,YAAY,CAACiB,OAAO,CAAC,MAAM,EAAEH,IAAI,CAACC,SAAS,CAACV,GAAG,CAACG,IAAI,CAACU,IAAI,CAAC,CAAC;IAE3DpB,QAAQ,CAACD,QAAQ,CAAC,CAAC,CAAC;IAEpB,OAAO;MAAEsB,OAAO,EAAE;IAAK,CAAC;EAC1B,CAAC,CAAC,OAAOV,GAAG,EAAE;IAAA,IAAAmB,cAAA,EAAAC,mBAAA;IACZ,MAAMP,MAAM,GAAG,EAAAM,cAAA,GAAAnB,GAAG,CAACc,QAAQ,cAAAK,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcpB,IAAI,cAAAqB,mBAAA,uBAAlBA,mBAAA,CAAoBL,OAAO,KAAI,qBAAqB;IAEnE1B,QAAQ,CAAC;MACPI,IAAI,EAAEb,aAAa;MACnBkB,OAAO,EAAEe;IACX,CAAC,CAAC;IAEF,OAAO;MAAEH,OAAO,EAAE,KAAK;MAAEM,KAAK,EAAEH;IAAO,CAAC;EAC1C;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,MAAM,GAAGA,CAAA,KAAOhC,QAAQ,IAAK;EACxCE,YAAY,CAAC+B,UAAU,CAAC,OAAO,CAAC;EAChC/B,YAAY,CAAC+B,UAAU,CAAC,MAAM,CAAC;EAE/BjC,QAAQ,CAAC;IAAEI,IAAI,EAAEZ;EAAO,CAAC,CAAC;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}