{"ast":null,"code":"// // Retrieve initial state from localStorage if available\n// const getInitialCart = () => {\n//   const storedCart = localStorage.getItem(\"cart\");\n//   return storedCart ? JSON.parse(storedCart) : [];\n// };\n\n// const handleCart = (state = getInitialCart(), action) => {\n//   const product = action.payload;\n//   let updatedCart;\n\n//   switch (action.type) {\n//     case \"ADDITEM\":\n//       // Check if product already in cart\n//       const exist = state.find((x) => x.id === product.id);\n//       if (exist) {\n//         // Increase the quantity\n//         updatedCart = state.map((x) =>\n//           x.id === product.id ? { ...x, qty: x.qty + 1 } : x\n//         );\n//       } else {\n//         updatedCart = [...state, { ...product, qty: 1 }];\n//       }\n//       // Update localStorage\n//       localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n//       return updatedCart;\n\n//     case \"DELITEM\":\n//       const exist2 = state.find((x) => x.id === product.id);\n//       if (exist2.qty === 1) {\n//         updatedCart = state.filter((x) => x.id !== exist2.id);\n//       } else {\n//         updatedCart = state.map((x) =>\n//           x.id === product.id ? { ...x, qty: x.qty - 1 } : x\n//         );\n//       }\n//       // Update localStorage\n//       localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n//       return updatedCart;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default handleCart;","map":{"version":3,"names":[],"sources":["Y:/MY/Certificate/E-COM/E_Commerce/src/redux/reducer/handleCart.js"],"sourcesContent":["// // Retrieve initial state from localStorage if available\n// const getInitialCart = () => {\n//   const storedCart = localStorage.getItem(\"cart\");\n//   return storedCart ? JSON.parse(storedCart) : [];\n// };\n\n// const handleCart = (state = getInitialCart(), action) => {\n//   const product = action.payload;\n//   let updatedCart;\n\n//   switch (action.type) {\n//     case \"ADDITEM\":\n//       // Check if product already in cart\n//       const exist = state.find((x) => x.id === product.id);\n//       if (exist) {\n//         // Increase the quantity\n//         updatedCart = state.map((x) =>\n//           x.id === product.id ? { ...x, qty: x.qty + 1 } : x\n//         );\n//       } else {\n//         updatedCart = [...state, { ...product, qty: 1 }];\n//       }\n//       // Update localStorage\n//       localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n//       return updatedCart;\n\n//     case \"DELITEM\":\n//       const exist2 = state.find((x) => x.id === product.id);\n//       if (exist2.qty === 1) {\n//         updatedCart = state.filter((x) => x.id !== exist2.id);\n//       } else {\n//         updatedCart = state.map((x) =>\n//           x.id === product.id ? { ...x, qty: x.qty - 1 } : x\n//         );\n//       }\n//       // Update localStorage\n//       localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n//       return updatedCart;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default handleCart;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}